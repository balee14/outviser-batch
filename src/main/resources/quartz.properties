# QRTZ_JOB_DETAILS.SCHED_NAME (Primary key)
# 클러스터링으로 묶인 서버들은 모두 동일한 instanceName 을 사용해야함
org.quartz.scheduler.instanceName=iSend-Batch

# Spring uses LocalDataSourceJobStore extension of JobStoreCMT
org.quartz.jobStore.tablePrefix = QRTZ_
org.quartz.jobStore.isClustered = true
org.quartz.jobStore.misfireThreshold=2000
org.quartz.jobStore.clusterCheckinInterval=1000

# Change this to match your DB vendor
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate

# Using Spring datasource in ScheduleConfig.class.getStdSchedulerFactory()
org.quartz.jobStore.dataSource = isendDS

# AUTO, NON_CLUSTERED, SYS_PROP 등의 옵션이 존재
# SYS_PROP 인 경우, org.quartz.scheduler.instanceId 를 key 값으로하는 system property를 가져옴
org.quartz.scheduler.instanceId=AUTO

org.quartz.scheduler.rmi.export = false
org.quartz.scheduler.rmi.proxy = false
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 10
org.quartz.threadPool.threadPriority = 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true

#============================================================================
# Configure Main Scheduler Properties
#============================================================================
org.quartz.scheduler.batchTriggerAcquisitionMaxCount=20
org.quartz.scheduler.idleWaitTime=1000
org.quartz.scheduler.skipUpdateCheck=true

#============================================================================
# Configure ThreadPool
#============================================================================
#org.quartz.threadPool.threadNamePrefix=QuartzScheduler

#============================================================================
# Configure JobStore
#============================================================================
org.quartz.jobStore.acquireTriggersWithinLock=true
